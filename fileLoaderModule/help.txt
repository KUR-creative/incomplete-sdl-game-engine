활용팁은 *)로 표시

■ DisplayObject 스펙 ■

[개념적인 member와 / 실제 렌더링용 render member]가 있다.
개념적인 멤버만 접근하여 수정할 수 있다.
렌더링 멤버에는 접근이 불가능하며 렌더링시에 내부적으로 계산된다.
또 렌더링 멤버는 자신을 소유한 부모의 렌더링 멤버에게 영향을 받는다.
1. x,y
	DisplayObject의 원점(0,0)은 자신을 소유한 부모의 회전중심이다.
	부모가 없는 root의 경우 원점은 화면 왼쪽 위 꼭지점이다.
2. w,h
	가장 근본적인 텍스쳐의 크기 textureW, textureH는 로드한 png의 것과 같다.
	이 크기를 기준으로 DisplayObject 생성자의 w,h와의 [비율]을 계산한다.
	자식도 이 [비율]에 따라 렌더링된다.
	처음부터 원하는 크기에 맞는 파일을 생성하라.
	부모가 확대된 상태면 부모의 자식도 확대된다. 
	addChild한 자식의 크기가 예상 밖일수도 있다.
	ratioW,ratioH를 이용하여 비율로 수정하거나
	w,h를 이용하여 픽셀단위로 수정할 수 있다.
3. 회전중심
	centerRatioW, centerRatioH로 표현되며, 생성시에만 결정할 수 있다. 
	생성 이후에는 수정이 불가능하다.
4. alpha, RGB
	0~255사이의 값만 받아들인다.
	비율을 통해 수정할 수도 있다.


render member를 수정은 못해도 get은 가능하게 하자.

■ DisplayObject 구현 사항 ■

DisplayObject는 개념적인 멤버들과 렌더링용 멤버render member들을 가진다.
renderCopy를 할 때 마다 resetRenderMember()를 호출한다.
resetRenderMember()에서 render member(renderRect, renderAngle, render...)를 계산한다.

1.
renderRect의 크기w,h는 원텍스쳐의 크기(textureW,textureH)에 대한
자신의 비율(ratioW,ratioH)과 부모의 비율(parent->renderRatioW,parent->renderRatioH)에 따라 달라진다.

2.
개념적인 회전중심(원점)은 좌표가 아닌 비율(centerRatioW, centerRatioH)로 표현된다.
회전시 각도는 부모의 각도(parent->renderAngle)가 더해진다.

3.
renderCenter는 renderRect에 상대적인 회전중심이며
렌더링원점centerForChild는 렌더링시 윈도우 화면에 상대적인 원점 좌표이다.
렌더링원점에도 회전변환이 적용되기에 부모에서 일어난 회전변환이 자손들에게 전달된다.

4.
renderRect의 좌표x,y에 5가지 변화가 영향을 미친다.
	1-1.자신의 좌표(rect.x, rect.y) 변화
	1-2.부모의 좌표(parent->centerForChild.x, parent->centerForChild.y) 변화

	2-1.자신의 크기(renderRatioW, renderRatioH) 변화
	2-2.부모의 크기(parent->renderRatioW, parent->renderRatioH) 변화

	3-1.(영향없음)자신의 angle은 renderRect의 좌표엔 영향없음
	3-2.부모의 각도(parent->renderAngle) 회전변환을 통해 적용된다.
		회전변환시의 원점은 부모의 렌더링원점(parent->centerForChild)이다.
		이 때 원점에서 텍스쳐 모서리 끝(renderCopy에 쓰이는 점)까지의 길이는 
		항상 일정해야 하기에 	회전변환의 대상이 아니다.
